{
  "name": "Smallfoot",
  "tagline": "A simpler version of bigfoot.js in ES6",
  "body": "# smallfoot\r\nA simpler version of [bigfoot.js](https://github.com/lemonmade/bigfoot) in ES6\r\n\r\nsmallfoot is a small footnote library that takes a different approach to writing footnotes\r\ncompared to bigfoot. smallfoot's philosophy is all about the KISS principle and therefore leaves styling\r\nup to the user. However, smallfoot does provide a powerful syntax converter along with css\r\nclasses that help the user find the right script or footnote.\r\n\r\n## Usage\r\n\r\n```html\r\n\r\n<!-- Write your superscripts and subscripts -->\r\n<p>\r\n  This is a superscript^1^\r\n  This is a subscript~1~\r\n</p>\r\n<!-- \r\n  Write your footnotes; Note that it doesn't matter where the\r\n  footnotes are placed and could have been together with the scripts.\r\n -->\r\n<p>\r\n  ^1: { This is a footnote for the superscript. }\r\n  ~1: { This is a footnote for the subscript. }\r\n</p>\r\n\r\n<!-- Add JQuery -->\r\n<script src=\"https://code.jquery.com/jquery-3.1.0.min.js\"></script>\r\n<!-- Add smallfoot -->\r\n<script src=\"{path to smallfoot}\">\r\n  // Initialize\r\n  $.smallfoot();\r\n</script>\r\n```\r\n\r\n## Advanced Usage\r\n\r\n### Using [Tooltipster](http://iamceege.github.io/tooltipster/) for footnotes.\r\n\r\n```js\r\n$(document).ready(function ({ references }){\r\n  $.smallfoot({\r\n    footnotes: {\r\n      show: false\r\n    }\r\n  })\r\n  .ready(function ({ references }) {\r\n    references.forEach(el => $(el).addClass('tooltip'));\r\n    $('.tooltip').tooltipster({ trigger: 'click' });\r\n  })\r\n  .onClick(function ({ target, event }) {\r\n    event.preventDefault();\r\n  })\r\n  .onMouseEnter(function ({ target }) {\r\n    const footnote = $(target).find('a').attr('href');\r\n    $(target).tooltipster('content', $(footnote).text());\r\n  });\r\n})\r\n```\r\n\r\n## Methods\r\n\r\n### `ready(callback: Function)`\r\n\r\nThis method calls the callback function and passes an *object* with an array of `references`\r\nand `footnotes`.\r\n\r\nNote/TODO: This method is not event based and will be called when you call it after initialization.\r\n\r\nExmaple:\r\n\r\n```js\r\n$.smallfoot().ready(function ({ references, footnotes }) { /* */ })\r\n```\r\n\r\n### `on(event: String, callback: Function)`\r\n\r\nThis method registers the callback to the specified event for any superscript and subscript references.\r\n\r\nNote: Helper methods such as `onClick(), onMouseEnter(), onMouseLeave()` are available.\r\nAlso, every registered callback will receive an *object* with `event`, `type: String`, and a custom `target`\r\nwhich will always refer to the parent wrapper of `<a>`.\r\n\r\n## Options\r\n\r\n### `{Boolean} options.references.useDiv`\r\n  \r\nDetermines whether a `div` should be used instead of `sup` or `sub`.\r\n### `{Boolea} options.footnotes.show` \r\n  \r\nDetermines whether the `ul` or `ol` containing the footnotes should be displayed.\r\n\r\n## CSS Classes\r\n\r\nsmallfoot follows a simple convention for its classes:\r\n\r\n```css\r\n/* The elements that contains the smallfoot class */\r\n.smallfoot { }\r\n\r\n/* The elements that contains the superscript and subscript class */\r\n.smallfoot .superscript { }\r\n.smallfoot .subscript { }\r\n\r\n/* The elements that contains the superscript and subscript reference class */\r\n.smallfoot .superscript .reference { }\r\n.smallfoot .subscript .reference { }\r\n\r\n/* The elements that contains the superscript and subscript footnote class */\r\n.smallfoot .superscript .footnote { }\r\n.smallfoot .subscript .footnote { }\r\n\r\n/* The elements that contains the footnotes class */\r\n.smallfoot .footnotes { }\r\n\r\n/* Every element that contains the supfoots class */\r\n.smallfoot .footnotes .supfoots { }\r\n/* Every element that contains the subfoots class */\r\n.smallfoot .footnotes .subfoots { }\r\n```",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}